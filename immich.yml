services:
  immich:
    container_name: immich
    image: ghcr.io/immich-app/immich-server:v1.129.0
    volumes:
      - ./volumes/immich/library:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: ${TZ}
      DB_HOSTNAME: immich-db
      DB_USERNAME: postgres
      DB_DATABASE_NAME: immich
      REDIS_HOSTNAME: immich-redis
    env_file: ./env/immich.env
    depends_on:
      - immich-redis
      - immich-db
    restart: unless-stopped
    networks:
      traefik:
      immich:
    labels:
      traefik.enable: true
      traefik.http.routers.immich.rule: Host(`immich.${DOMAIN}`)
      traefik.http.services.immich.loadbalancer.server.port: 2283

  immich-machine-learning:
    container_name: immich-machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.129.0
    environment:
      TZ: ${TZ}
      DB_HOSTNAME: immich-db
      DB_USERNAME: postgres
      DB_DATABASE_NAME: immich
      REDIS_HOSTNAME: immich-redis
    env_file: ./env/immich.env
    volumes:
      - immich-model-cache:/cache
    restart: unless-stopped
    networks:
      immich:

  immich-redis:
    container_name: immich-redis
    image: docker.io/library/redis:7
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped
    networks:
      immich:

  immich-db:
    container_name: immich-db
    image: ghcr.io/tensorchord/pgvecto-rs:pg14-v0.2.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: "--data-checksums"
    env_file: ./env/immich.env
    volumes:
      - ./volumes/immich/postgres:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    restart: unless-stopped
    networks:
      immich:

volumes:
  immich-model-cache:

networks:
  immich:
